<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
    
    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    
    <!-- 加载配置文件 -->
    <!-- <context:property-placeholder location="classpath:db.properties"/> -->
    
    <!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/mybatisStudyDB" 
		p:username="root"
		p:password="abc12345" />
		
	<!-- 整合mybatis ,spring -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="configLocation" value="classpath:mybatis-config.xml"></property>
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <!-- 原始dao配置方式  -->
    <bean id="userDao" class="main.java.com.sitaluo.spring.UserDaoImpl">
    	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    
    <!-- mapper配置factorybean,根据mapper接口生成代理对象 (每一个mapper都要一个配置)-->
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
    	<property name="mapperInterface" value="main.java.com.sitaluo.mapper.UserMapper"></property>
    	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    <!-- mapper的批量扫描，自扫描mapper包中的接口，自动创建代理对象并在spring容器中注入 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    		<property name="basePackage" value="main.java.com.sitaluo.mapper"></property>
    		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    
</beans>
